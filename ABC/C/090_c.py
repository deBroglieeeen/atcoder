# 一般に偶奇のパリティで解ける
# 接するカードの数が奇数ならそのカードは表に偶数なら裏になる
# つまり接するカードの数が偶数となるカードを数え上げればよい
n,m = map(int,input().split())
# 3行3列以上の場合
# 全体 - (行の外枠) - (列の外枠) + 4(引きすぎた4隅を足す)
# さらに考察すると下になる
# 全体(n * m) - (2 * 列の数) - (行の数 * 2) + 4
if n >= 3 and m >= 3:
  print(n * m - (2 * m) - (n * 2) + 4)
elif n == 1 and m == 1:
  print(1)
# 1行の場合は両端のカード以外は偶数のカードと接するので列数 - 2が解
elif n == 1:
  print(m - 2)
# 2行の場合は全てのカードが奇数のカードと接するので答えは0
elif n == 2:
  print(0)
elif n >= 3 and m == 1:
  print(n - 2)
elif n >= 3 and m == 2:
  print(0)